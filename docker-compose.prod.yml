version: '3.8'

services:
  web:
    build: .
    restart: always
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 --worker-class gevent config.wsgi:application
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
    networks:
      - newshub_network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - newshub_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - newshub_network

  celery:
    build: .
    restart: always
    command: celery -A config worker -l info --concurrency=4
    env_file:
      - .env.prod
    depends_on:
      - redis
      - db
    networks:
      - newshub_network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  celery-beat:
    build: .
    restart: always
    command: celery -A config beat -l info
    env_file:
      - .env.prod
    depends_on:
      - redis
      - db
    networks:
      - newshub_network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/:/etc/nginx/conf.d/
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    depends_on:
      - web
    networks:
      - newshub_network

networks:
  newshub_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
